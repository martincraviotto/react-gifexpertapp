{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAZtB,kBAgBXM,GAhBW,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECNwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAK1B,CAACpB,IAEIqB,EDfyBK,CAAa1B,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAIrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEpB5BgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADHA,Y,MClBpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.576523c3.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();   \r\n        if(inputValue.trim().length > 2){     \r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>            \r\n            <input\r\n                type=\"text\"    \r\n                value={ inputValue } \r\n                onChange={ handleInputChange }           \r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired    \r\n}\r\n\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async (category)=>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=MpT2bvWUKN1C97yxRBHH0eBQOsxIcYQ7`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n     return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading} = useFetchGifs(category);\r\n   \r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'> { category } </h3>   \r\n           \r\n            { loading && <p className='animate__animated animate__flash'>loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    { \r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ) ) \r\n                    }               \r\n                        \r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect( ()=>{\r\n        getGifs( category)\r\n            .then( imgs => {\r\n                    \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n             \r\n\r\n            })\r\n    },[category]);\r\n\r\n    return state; // {data:[], loading:true}\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     //setCategories([...categories,'HunterXHunger']);\r\n    //     setCategories(cats => [...cats,'HunterXHunger']);\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>  \r\n            <h2>GifExpertApp</h2>                  \r\n            <AddCategory setCategories={setCategories} />    \r\n            <hr />   \r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(category =>(  \r\n                        <GifGrid \r\n                            key = { category }\r\n                            category={ category } \r\n                        />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>    \r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}